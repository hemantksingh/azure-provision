variables:
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build artifact
  jobs:
  - job: Build
    displayName: Build job
    pool:
      vmImage: $(vmImageName)
    steps:
      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: echo build complete
      - task: PublishPipelineArtifact@1
        inputs:
          artifact: 'deployment'
          patterns: '**/*.tf'
          path: $(Build.SourcesDirectory)/src

- stage: Deploy
  displayName: Deploy artifact
  jobs:
  - job: Deploy
    displayName: Deploy job
    pool:
      vmImage: $(vmImageName)
    steps:
      - task: TerraformInstaller@0
        displayName: Install terraform
        inputs:
          terraformVersion: 0.12.20
      - task: Bash@3
        displayName: Display terraform version
        inputs:
          targetType: 'inline'
          script: terraform --version
      - task: Bash@3
        displayName: Terraform init
        inputs:
          targetType: 'inline'
          script: |
            terraform init \
              -backend-config="storage_account_name=hkterraformstore" \
              -backend-config="container_name=cluster-state" \
              -backend-config="key=lolcat.tfstate" \
              -backend-config="access_key=$(BACKEND_ACCESS_KEY)"
      - task: Bash@3
        displayName: Terraform apply
        inputs:
          targetType: 'inline'
          script: |
            terraform apply \
              -auto-approve \
              -var subscription_id=$(ARM_SUBSCRIPTION_ID) \
              -var client_id=$(ARM_CLIENT_ID) \
              -var client_secret=$(ARM_CLIENT_SECRET) \
              -var tenant_id=$(ARM_TENANT_ID)